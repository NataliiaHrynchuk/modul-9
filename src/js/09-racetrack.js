import '../css/common.css';
import '../css/racetrack.css';

const horses = [
  'Secretariat',
  'Eclipse',
  'West Australian',
  'Flying Fox',
  'Seabiscuit',
];
//*----–ü–µ—Ä–µ–¥ –≤–∏–∫–ª–∏–∫–æ–º —Ñ-—Ü—ñ—ó run –æ–≥–æ–ª–æ—à—É—î–º–æ, —â–æ –∑–∞—ó–∑–¥ –ø–æ—á–∞–≤—Å—è –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º—É –∫–æ–¥—ñ,
//----–±–æ —Ä–µ–∑-—Ç —Ñ-—Ü—ñ—ó run –ø–æ–±–∞—á–∏–º–æ –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é time --------

// console.log(
//   '%c ü§ñ –ó–∞—ó–∑–¥ –ø–æ—á–∞–≤—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è!',
//   'color: brown; font-size: 14px;',
// );                                 //*--–∑–Ω–∞—á–æ–∫ %c —Ä–æ–±–∏—Ç—å —Ç–∞–∫, —â–æ –≤ –∫–æ–Ω—Å–æ–ª—å –≤–∏–≤–æ–¥–∏—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à–∏–π —Ä—è–¥–æ–∫,
                                   // –∞ –¥—Ä—É–≥–∏–π –∑–∞—Å—Ç–æ—Å–æ–≤—É—î—Ç—å—Å—è –¥–æ –Ω—å–æ–≥–æ, —è–∫ —Å—Ç–∏–ª—ñ



//*--—Ñ-—Ü—ñ—è run, —â–æ –∑–∞–ø—É—Å–∫–∞—î 1 –∫–æ–Ω—è, —è–∫–∏–π –ø—Ä–∏–±—ñ–∂–∏—Ç—å —á–µ—Ä–µ–∑ —á–∞—Å, —è–∫–∏–π –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π —Ñ-—Ü—ñ—î—é
//--getRandomTime. –†–µ–∑-—Ç–æ–º —Ñ-—Ü—ñ—ó run –±—É–¥–µ –ø—Ä–æ–º—ñ—Å, (–π–æ–≥–æ —Ä–µ–∑-—Ç –∑–∞–≤—ñ–¥–æ–º–æ –ø–æ–∑–∏—Ç–∏–≤–Ω–∏–π),
//--–≤ —Ä–µ–∑-—Ç—ñ —è–∫–æ–≥–æ –æ—Ç—Ä–∏–º–∞—î–º–æ–æ –æ–±'—î–∫—Ç –∑ —ñ–º'—è–º –∫–æ–Ω—è —ñ —á–∞—Å–æ–º –∑–∞–±—ñ–≥—É:

function run(horse) {
  return new Promise(resolve => {
    const time = getRandomTime(2000, 3500);

    setTimeout(() => {
      resolve({ horse, time });
    }, time);
  });
}

// run('–ú–∞–Ω–≥–æ').then(x => console.log(x));

function getRandomTime(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
} //—Ñ-—Ü—ñ—è, —â–æ –≥–µ–Ω–µ—Ä—É—î —Ä–∞–Ω–¥–æ–º–Ω–∏–π —á–∞—Å –≤ –º–µ–∂–∞—Ö –≤—ñ–¥ min –¥–æ max

//**---–ê–ª–µ –Ω–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –Ω–µ 1, –∞ –≤—Å—ñ—Ö –∫–æ–Ω–µ–π, —Ç–æ–º—É —Å—Ç–≤–æ—Ä—é—î–º–æ
//  –º–∞—Å–∏–≤ –ø—Ä–æ–º—ñ—Å—ñ–≤, –º–µ–ø–∞—î–º–æ –∫–æ–∂–Ω–æ–≥–æ –∫–æ–Ω—è —ñ –æ—Ç—Ä–∏–º—É—î–º–æ –Ω–∞ –∫–æ–∂–Ω–æ–≥–æ –∫–æ–Ω—è
//   –æ–±'—î–∫—Ç –∑ –π–æ–≥–æ —ñ–º–µ–Ω–µ–º —ñ —á–∞—Å–æ–º –∑–∞–±—ñ–≥—É * /

// const promises = horses.map(horse => run(horse));//*-- —Ü–µ–π –∑–∞–ø–∏—Å –º–æ–∂–Ω–∞ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ –¥–æ —Ç–∞–∫–æ–≥–æ
const promises = horses.map(run);
// console.log(promises);

/*
 * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞
 */
// Promise.race(promises).then(x => console.log(x)); //*--—Ä–µ–∑-—Ç –ø—Ä–æ–º—ñ—Å—É –º–æ–∂–Ω–∞ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑—É–≤–∞—Ç–∏,
                                                    //*--—â–æ–± –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤–ª-—Å—Ç—ñ —É –ø–µ—Ä–µ–º–æ–∂–Ω–æ–º—É –Ω–∞–ø–∏—Å—ñ 
                                                    //–≤ –∫–æ–Ω—Å–æ–ª—ñ: 
//*--- –í–¥–æ—Å–∫–æ–Ω–∞–ª—é—î–º–æ:

// Promise.race(promises).then(({ horse, time }) => {
//   console.log(
//     `%c üéâ –ü–µ—Ä–µ–º—ñ–≥ ${horse}, —Ñ—ñ–Ω—ñ—à—É–≤–∞–≤—à–∏ –∑–∞ ${time} —á–∞—Å—É`,
//     'color: green; font-size: 14px;',
//   );
// });

/*
 * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤
 */

// Promise.all(promises).then(x => {
//   console.log(x);
// });                           //*--—Ä–µ–∑-—Ç–æ–º –±—É–¥–µ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤

//*--- –í–¥–æ—Å–∫–æ–Ω–∞–ª—é—î–º–æ:
//  Promise.all(promises).then(() => {
//    console.log(
//     '%c üìù –ó–∞—ó–∑–¥ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è —Å—Ç–∞–≤–∫–∏',
//     'color: blue; font-size: 14px;',
//   );
// }); 

//**
 //* -----–í–¥–æ—Å–∫–æ–Ω–∞–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å--------------------------
 
const refs = {
  startBtn: document.querySelector('.js-start-race'),
  winnerField: document.querySelector('.js-winner'),
  progressField: document.querySelector('.js-progress'),
  tableBody: document.querySelector('.js-results-table > tbody'),
};


// refs.startBtn.addEventListener('click', () => {
//   const promises = horses.map(run);
   
  // refs.winnerField.textContent = ''; //*--–æ—á–∏—â—É—î–º–æ –ø–æ–ª–µ –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –∑–∞—ó–∑–¥–æ–º
                                        //*-–∞ —Ç–µ–ø–µ—Ä —Ä–æ–±–∏–º–æ —Ü–µ –∫–æ—Ä–æ—Ç—à–µ:
  // updateWinnerField('');
  // refs.progressField.textContent = 'ü§ñ–ó–∞—ó–∑–¥ –ø–æ—á–∞–≤—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è!'; //–∑–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ –≤–∏–∫–ª–∏–∫ —Ñ-—Ü—ñ—ó
  // updateProgressField('ü§ñ–ó–∞—ó–∑–¥ –ø–æ—á–∞–≤—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è!');
  
  // Promise.race(promises).then(({ horse, time }) => {
  //   // refs.winnerField.textContent = `üéâ –ü–µ—Ä–µ–º—ñ–≥ ${horse}, —Ñ—ñ–Ω—ñ—à—É–≤–∞–≤—à–∏ –∑–∞ ${time} —á–∞—Å—É`; //*--—Ç–µ–ø–µ—Ä —Å–∫–æ—Ä–æ—á—É—î–º–æ:
  //   updateWinnerField(`üéâ –ü–µ—Ä–µ–º—ñ–≥ ${horse}, —Ñ—ñ–Ω—ñ—à—É–≤–∞–≤—à–∏ –∑–∞ ${time} —á–∞—Å—É`);
  //   updateResultsTable({ horse, time });
  // }); //***--–∑–∞–º—ñ–Ω—é—î–º–æ —Ñ-—Ü—ñ—î—é:
  // determineWinner(promises);
  
  // Promise.all(promises).then(() => {
    // refs.progressField.textContent = 'üìù –ó–∞—ó–∑–¥ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è —Å—Ç–∞–≤–∫–∏'; //–∑–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ –≤–∏–∫–ª–∏–∫ —Ñ-—Ü—ñ—ó
//     updateProgressField('üìù –ó–∞—ó–∑–¥ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è —Å—Ç–∞–≤–∫–∏');
// }); //*--–∑–∞–º—ñ–Ω—é—î–º–æ —Ñ-—Ü—ñ—î—é:
  
//   waitForAll(promises);
// });

//*==========–¢–µ–ø–µ—Ä —Å—Ç–≤–æ—Ä–∏–º–æ —Ñ-—Ü—ñ—é onStart(), –≤ —è–∫—É –∑–∞–ø—Ö–Ω–µ–º–æ –≤—Å—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω—ñ –Ω–∞–º–∏ —Ñ-—Ü—ñ—ó
//*  —ñ –ø–æ—Å—Ç–∞–≤–∏–º —ó—ó –∫–æ–ª–±–µ–∫–æ–º –Ω–∞ —Å–ª—É—Ö–∞—á–∞ –¥–æ –∫–Ω–æ–ø–∫–∏ —Å—Ç–∞—Ä—Ç
//* -- —Ç–∞–∫–æ–∂ –≤–≤–æ–¥–∏–º–æ –≥–ª–æ–±–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É let raceCounter = 0
//*--–¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –∫-—Å—Ç—ñ –∑–∞—ó–∑–¥—ñ–≤. –ö–æ–∂–Ω–æ–≥–æ —Ä–∞–∑—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É
//*-- —Å—Ç–∞—Ä—Ç—É —ó—ó –∑–Ω–∞—á–µ–Ω–Ω—è –±—É–¥–µ –∑–±—ñ–ª—å—à—É–≤–∞—Ç–∏—Å—å –Ω–∞ 1:


let raceCounter = 0;
refs.startBtn.addEventListener('click', onStart);

function onStart() {
  raceCounter += 1;
  const promises = horses.map(run);

  updateWinnerField('');
  updateProgressField('ü§ñ –ó–∞—ó–∑–¥ –ø–æ—á–∞–≤—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è!');
  determineWinner(promises);
  waitForAll(promises);
}

//*--–§-—Ü—ñ—è –ø–æ –∑–±–æ—Ä—É —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—é —ñ–Ω—Ñ-—Ü—ñ—ó –ø—Ä–æ –ø–µ—Ä–µ–º–æ–∂—Ü—è:

function determineWinner(horsesP) {
  Promise.race(horsesP).then(({ horse, time }) => {
    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}
    –≤—Ä–µ–º–µ–Ω–∏`);
    updateResultsTable({ horse, time, raceCounter });
  });
}
//*--—Ñ-—Ü—ñ—è, —â–æ –¥–æ—á–µ–∫–∞—î—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø—Ä–æ–º—ñ—Å—ñ–≤:

function waitForAll(horsesP) {
  Promise.all(horsesP).then(() => {
    updateProgressField('üìù –ó–∞—ó–∑–¥ –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è, –ø—Ä–∏–π–º–∞—é—Ç—å—Å—è —Å—Ç–∞–≤–∫–∏');
  });
}

//*----—Ñ-—Ü—ñ—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—è –ø–µ—Ä–µ–º–æ–∂—Ü—è:
function updateWinnerField(message) {
  refs.winnerField.textContent = message;
} 

//*----—Ñ-—Ü—ñ—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –ø–æ–ª—è —Å—Ç–∞–Ω—É –≥–æ–Ω–æ–∫:
function updateProgressField(message) {
  refs.progressField.textContent = message;
} 

//*----—Ñ-—Ü—ñ—è –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–∞–±–ª–∏—á–∫–∏
// function updateResultsTable({ horse, time}) {
//   const tr = `<tr>
//     <td></td>
//     <td>${horse}</td>
//     <td>${time}</td>
//   </tr>`;
//   refs.tableBody.insertAdjacentHTML('beforeend', tr);
// }

//*--—Ç–µ–ø–µ—Ä —Ç–µ —Å–∞–º–µ –∑ –≤–∏–∫–æ—Ä-–Ω—è–º raceCounter
function updateResultsTable({ horse, time, raceCounter }) {
  const tr = `<tr>
  <td>${raceCounter}</td>
  <td>${horse}</td>
  <td>${time}</td>
  </tr>`;
  refs.tableBody.insertAdjacentHTML('beforeend', tr);
}




// function run(horse) {
//   return new Promise(resolve => {
//     const time = getRandomTime(2000, 3500);

//     setTimeout(() => {
//       resolve({ horse, time });
//     }, time);
//   });
// }

